# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

concurrency:
  group: Tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  test-internal:
    name: Internal Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go test -v ./internal/...

  # Run acceptance tests in a matrix with Terraform CLI versions
  test-terraform:
    name: Acceptance Tests
    needs: test-internal
    runs-on: ubuntu-latest
    env:
      TF_ACC: "1"
    services:
      backstage:
        image: roadiehq/community-backstage-image
        ports:
          - 7000
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.5.*'
          - '1.6.*'
          - '1.7.*'
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@97f030cf6dc0b4f5e0da352c7bca9cca34579800 # v3.1.0
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          ACCTEST_SKIP_RESOURCE_TEST: "1"
          BACKSTAGE_BASE_URL: "https://demo.backstage.io"
        run: go test -v -cover -covermode=atomic -coverprofile=coverage1.out ./backstage
        timeout-minutes: 10
      - env:
          BACKSTAGE_BASE_URL: "http://localhost:${{ job.services.backstage.ports[7000] }}"
        run: go test -v -cover -covermode=atomic -coverprofile=coverage2.out ./backstage -run TestAccResourceLocation
        timeout-minutes: 10
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5ecb98a3c6b747ed38dc09f787459979aebb39be # v4.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage1.out,./coverage2.out
          verbose: true
